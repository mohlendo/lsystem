<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:mx="library://ns.adobe.com/flex/halo">

  <fx:Script>
    <![CDATA[
      import mx.collections.ArrayCollection;
      /* Define the skin elements that should not be colorized. 
           For panel, border and title backround are skinned, but the content area and title text are not. */
        static private const exclusions:Array = ["background", "contentGroup"];

      	/** 
      	 * @copy spark.skins.SparkSkin#colorizeExclusions
      	 */		
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
        static private const contentFill:Array = ["bgFill"];
        
        /**
         * @inheritDoc
         */
        override public function get contentItems():Array {return contentFill};
        
                
        protected function openClose_clickHandler(event:MouseEvent):void
        {
          if(currentState == "normal") {
            this.currentState = "collapsed";
          } else {
            this.currentState = "normal";
          }
        }
    ]]>
  </fx:Script>

  <fx:Metadata>
    <!-- Specify the component that uses this skin class. -->
          [HostComponent("ControlPanel")]
  </fx:Metadata>
  <fx:Declarations>

  </fx:Declarations>

  <s:states>
    <s:State name="normal"/>
    <s:State name="collapsed"/>
  </s:states>

  <s:transitions>
    <mx:Transition fromState="normal"
                   toState="collapsed">
      <mx:Parallel>
        <s:Fade targets="{ [shadow, border, background, contentGroup] }"
                alphaFrom="1"
                alphaTo="0"
                duration="250"/>
        <s:Resize targets="{ [hostComponent,] }"
                  widthFrom="{hostComponent.width}"
                  widthTo="30"
                  duration="250"/>
      </mx:Parallel>
    </mx:Transition>
    <mx:Transition fromState="collapsed"
                   toState="normal">
      <mx:Parallel>
        <s:Resize targets="{ [hostComponent] }"
                  widthFrom="30"
                  widthTo="300"
                  duration="250"/>
        <s:Fade targets="{ [shadow, border, background, contentGroup] }"
                alphaFrom="0"
                alphaTo="1"
                duration="250"/>
      </mx:Parallel>
    </mx:Transition>
  </s:transitions>

  <!-- drop shadow -->
  <s:Rect id="shadow"
          left="0"
          top="0"
          right="0"
          bottom="0">
    <s:filters>
      <s:DropShadowFilter blurX="20"
                          blurY="20"
                          alpha="0.32"
                          distance="11"
                          angle="90"
                          knockout="true"/>
    </s:filters>
    <s:fill>
      <s:SolidColor color="0"/>
    </s:fill>
  </s:Rect>

  <!-- layer 1: border -->
  <s:Rect id="border"
          left="0"
          right="0"
          top="0"
          bottom="0">
    <s:stroke>
      <s:SolidColorStroke color="0"
                          alpha="0.50"
                          weight="1"/>
    </s:stroke>
  </s:Rect>

  <!-- fill -->
  <s:Rect id="background"
          left="1"
          right="1"
          top="1"
          bottom="1">
    <s:fill>
      <s:SolidColor color="0xFFFFFF"
                    id="bgFill"/>
    </s:fill>
  </s:Rect>

  <!---
       @copy spark.components.SkinnableContainer#skinpart:contentGroup
  -->
  <s:ToggleButton id="collapseBtn"
                  skinClass="skins.CollapseButtonSkin"
                  click="openClose_clickHandler(event)"
                  toolTip="{collapseBtn.selected ? 'Open' : 'Collapse'}"
                  right="5"
                  top="5"/>
  <s:Group id="contentGroup"
           left="10"
           right="15"
           top="15"
           bottom="10"
           minWidth="0"
           minHeight="0">
    <s:layout>
      <s:VerticalLayout gap="15"/>
    </s:layout>
  </s:Group>

</s:SparkSkin>
